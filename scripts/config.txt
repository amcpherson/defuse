#
# Configuration file for deFuse
#
# At a minimum, change all values enclused by []
#

# Directory where you have decompressed your dataset
dataset_dir                                 = [Where you unpacked or intend to store the dataset]
dataset_prefix                              = $(dataset_dir)/Homo_sapiens.GRCh37.59

# Local directory acessible by individual cluster jobs
cluster_dir                                 = $(dataset_dir)
cluster_prefix                              = $(cluster_dir)/Homo_sapiens.GRCh37.59

# Dataset files
gene_models                                 = $(dataset_prefix).gtf
genome_fasta                                = $(dataset_prefix).dna.fa
intron_regions                              = $(dataset_prefix).intron.regions
intronic_fasta                              = $(dataset_prefix).intronic.fa
exons_fasta                                 = $(dataset_prefix).exons.fa
exons_regions                               = $(dataset_prefix).exons.regions
cds_fasta                                   = $(dataset_prefix).cds.fa
utr5p_fasta                                 = $(dataset_prefix).utr5p.fa
utr3p_fasta                                 = $(dataset_prefix).utr3p.fa
cdna_regions                                = $(dataset_prefix).cdna.regions
cdna_fasta                                  = $(dataset_prefix).cdna.fa
cdna_ext_fasta                              = $(dataset_prefix).cdna.ext.fa
cdna_ext_regions                            = $(dataset_prefix).cdna.ext.regions
gene_regions                                = $(dataset_prefix).gene.regions
gene_fasta                                  = $(dataset_prefix).gene.fa
cdna_gene_fasta                             = $(dataset_prefix).cdna.gene.fa
cdna_gene_regions                           = $(dataset_prefix).cdna.gene.regions
tss_regions                                 = $(dataset_prefix).gene.tss.regions
tts_regions                                 = $(dataset_prefix).gene.tts.regions
upstream_fasta                              = $(dataset_prefix).upstream.fa
downstream_fasta                            = $(dataset_prefix).downstream.fa
rrna_fasta                                  = $(dataset_prefix).rrna.fa
ig_gene_list                                = $(dataset_prefix).ig.gene.list
gene_info_list                              = $(dataset_prefix).gene.info.list
gene_adj_list                               = $(dataset_prefix).gene.adj.list
gene_tran_list                              = $(dataset_prefix).genetran.list
est_fasta                                   = $(dataset_dir)/est.fa
est_alignments                              = $(dataset_dir)/intronEst.txt

# Fasta files with bowtie indices, accessible by individual alignment jobs, possibly locally stored on cluster nodes
#  If you wish to have files local to a cluster's execution nodes, these can be different than the 
#  non-cluster equivalents, otherwise they could be set the same as cdna_fasta and cdna_gene_fasta
cdna_fasta_cluster                          = $(cluster_prefix).cdna.fa
cdna_gene_fasta_cluster                     = $(cluster_prefix).cdna.gene.fa

# Fasta files with bowtie indices for prefiltering reads for concordantly mapping pairs
#  Accessed only by individual jobs, thus these files could be put in the local directory 
#  of each cluster node if a cluster is being used. 
prefilter1                                  = $(cluster_dir)/Homo_sapiens.GRCh37.59.dna.fa
prefilter2                                  = $(cluster_dir)/Hs.seq.uniq

# Path where you unpacked the source
source_directory                            = [where you unpacked the source code]

# deFuse scripts and tools
scripts_directory                           = $(source_directory)/scripts
tools_directory                             = $(source_directory)/tools
data_directory                              = $(source_directory)/data

# Path to samtools, 0.1.8 is compiled for you, use other versions at your own risk
samtools_bin                                = $(source_directory)/external/samtools-0.1.8/samtools

# Paths to executables and scripts
bowtie_bin                                  = [path to your bowtie binary version 0.12.5 or greater recommended]
bowtie_build_bin                            = [path to your bowtie-build binary version 0.12.5 or greater recommended]
bowtie_threads                              = 1
bowtie_quals                                = --phred33-quals
blat_bin                                    = [path to your blat binary, 64-bit recommended]
r_bin                                       = [path to R binary]
rscript_bin                                 = [path to Rscript binary]

# Parameters for building the dataset
gene_sources                                = IG_C_gene,IG_D_gene,IG_J_gene,IG_V_gene,processed_transcript,protein_coding
chromosomes                                 = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y
ig_gene_sources                             = IG_C_gene,IG_D_gene,IG_J_gene,IG_V_gene
rrna_gene_sources                           = Mt_rRNA,rRNA,rRNA_pseudogene
utr_extend                                  = 2000
cdna_utr_extend                             = 500
rrna_extend                                 = 100

# Max insert size considered by bowtie
max_insert_size                             = 400

# Trim length for discordant reads (split reads are not trimmed)
discord_read_trim                           = 50

# Filtering parameters
clustering_precision                        = 0.95
span_coverage_threshold                     = 0.3
span_count_threshold                        = 5
split_count_threshold                       = 3
split_pos_pvalue_threshold                  = 0.01
split_min_pvalue_threshold                  = 0.01
span_length_pvalue_threshold                = 0.01
percent_identity_threshold                  = 0.80
max_dist_pos                                = 600
num_dist_genes                              = 500
split_min_anchor                            = 4
max_concordant_ratio                        = 0.1
splice_bias                                 = 10
denovo_assembly                             = no
genome_breakseq_threshold                   = 0.1
cdna_breakseq_threshold                     = 0.1
est_breakseq_threshold                      = 0.2
estislands_breakseq_threshold               = 0.2
positive_controls                           = $(data_directory)/controls.txt

# Position density when calculating covariance
covariance_sampling_density                 = 0.01

# Number of reads for each job in split
reads_per_job                               = 1000000

# Number of regions for each breakpoint sequence job in split
regions_per_job                             = 20

# If you have command line 'mail' and wish to be notified
mailto                                      = andrew.mcpherson@gmail.com

# Remove temp files
remove_job_files                            = yes
remove_job_temp_files                       = yes

# Converting to fastq
# Fastq converter config format 1 for reads stored in separate files for each end
#  data_lane_rexex_N is a perl regex which stores the lane id in $1
#  data_end_regex_N is a perl regex which stores the end, 1 or 2, in $1
#  data_compress_regex_N is a perl regex which stores the compression extension in $1
#  data_convert_N is the associated conversion utility that takes data at stdin and outputs fastq at stdout
# Fastq converter config format 2 for reads stored in separate files for each end
#  data_lane_regex_N is a perl regex which stores the lane id in $1
#  data_compress_regex_N is a perl regex which stores the compression extension in $1
#  data_end1_converter_N is the associated conversion utility that takes data at stdin and outputs fastq for end 1 at stdout
#  data_end2_converter_N is the associated conversion utility that takes data at stdin and outputs fastq for end 2 at stdout

data_lane_regex_1                           = ^(.+)_[12]_export\.txt.*$
data_end_regex_1                            = ^.+_([12])_export\.txt.*$
data_compress_regex_1                       = ^.+_[12]_export\.txt(.*)$
data_converter_1                            = $(scripts_directory)/fq_all2std.pl export2std

data_lane_regex_2                           = ^(.+)_[12]_concat_qseq\.txt.*$
data_end_regex_2                            = ^.+_([12])_concat_qseq\.txt.*$
data_compress_regex_2                       = ^.+_[12]_concat_qseq\.txt(.*)$
data_converter_2                            = $(scripts_directory)/qseq2fastq.pl

data_lane_regex_3                           = ^(.+)\.bam.*$
data_compress_regex_3                       = ^.+\.bam(.*)$
data_end1_converter_3                       = samtools view - | filter_sam_mate.pl 1 | sam_to_fastq.pl
data_end2_converter_3                       = samtools view - | filter_sam_mate.pl 2 | sam_to_fastq.pl

data_lane_regex_4                           = ^(.+).[12].fastq.*$
data_end_regex_4                            = ^.+.([12]).fastq.*$
data_compress_regex_4                       = ^.+.[12].fastq(.*)$
data_converter_4                            = cat

